# https://circleci.com/docs/2.0/language-php/
# https://circleci.com/docs/2.0/circleci-images/
version: 2

defaults: &defaults
    working_directory: '~/project'
    docker: [ { image: 'halplatform/hal-build-environments:php7.1-centos7' } ]

workflows:

  version: 2

  pipeline:
    jobs:
      - fetch_code
      - install:
          requires: [ fetch_code ]

      - run_linting:
          requires: [ install ]

      - run_tests:
          requires: [ install ]

jobs:
    fetch_code:
        <<: *defaults

        steps:
            - checkout
            - persist_to_workspace: { root: '.', paths: [ '.' ] }

    install:
        <<: *defaults

        steps:
            - attach_workspace: { at: '.' }

            - run:
                name: 'Prepare Enterprise Setup'
                command: 'curl -sLk https://git/pages/circleci/prepare-environment/prepare.sh | bash -'

            - restore_cache:
                keys: [ 'v1-backend-deps-{{ checksum "composer.lock" }}', 'v1-backend-deps-' ]

            - run:
                name: 'Update Composer'
                command: 'composer self-update'

            - run:
                name: 'Install packages'
                command: 'composer --no-interaction --no-progress install'

            - run:
                name: 'List installed packages'
                command: 'composer show'

            - save_cache:
                key: 'v1-backend-deps-{{ checksum "composer.lock" }}'
                paths: [ './vendor' ]

            - persist_to_workspace: { root: '.', paths: [ '.' ] }

    run_linting:
        <<: *defaults

        steps:
            - attach_workspace: { at: '.' }

            - run:
                name: 'Run syntax check'
                command: 'vendor/bin/phplint --no-cache --ansi src'

            - run:
                name: 'Run static analysis'
                command: 'vendor/bin/phpcs -n --colors --standard=PSR2 src || true'

    run_tests:
        <<: *defaults

        steps:
            - attach_workspace: { at: '.' }

            - run:
                name: 'Run tests'
                command: './vendor/bin/phpunit'

            - store_test_results:
                path: '.phpunit/report'
