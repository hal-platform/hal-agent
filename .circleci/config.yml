# https://circleci.com/docs/2.0/language-php/
# https://circleci.com/docs/2.0/circleci-images/
version: 2

defaults: &defaults
    working_directory: '~/project'
    docker:
        - image: 'halplatform/php:latest'

node_defaults: &node_defaults
    working_directory: '~/project'
    docker:
        - image: 'circleci/node:9-stretch'

attach_workspace: &attach_workspace
    attach_workspace:
        at: '.'

persist_workspace: &persist_workspace
    persist_to_workspace:
        root: '.'
        paths: [ '.' ]

enterprise_setup: &enterprise_setup
    run:
        name: 'Prepare Enterprise Setup'
        command: |
            if [ "${OPEN_SOURCE}" == "1" ] ; then
                echo "Detected open source repo. Skipping step."
            else
                curl -sLk "https://git/pages/circleci/prepare-environment/prepare.sh" | bash -
            fi

workflows:

    version: 2

    pipeline:
        jobs:
            - fetch_code
            - install_php_dependencies:
                requires: [ fetch_code ]

            - unit_tests:
                requires: [ install_php_dependencies ]
            - static_analysis:
                requires: [ install_php_dependencies ]
            - linting:
                requires: [ install_php_dependencies ]
            - security_tests:
                requires: [ install_php_dependencies ]

            - build_phar:
                requires: [ unit_tests, static_analysis, linting, security_tests ]
                filters:
                    branches: { only: 'box' }

jobs:
    fetch_code:
        <<: *defaults
        steps:
            - checkout
            - *persist_workspace

    install_php_dependencies:
        <<: *defaults
        steps:
            - *enterprise_setup
            - *attach_workspace

            - restore_cache:
                keys: [ 'v1-php-deps-{{ checksum "composer.lock" }}', 'v1-php-deps' ]

            - run:
                name: 'Install PHP dependencies'
                command: |
                    composer --no-interaction --no-progress install
                    composer show

            - save_cache:
                key: 'v1-php-deps-{{ checksum "composer.lock" }}'
                paths: [ 'vendor' ]

            - *persist_workspace

    unit_tests:
        <<: *defaults
        steps:
            - *attach_workspace
            - run:
                name: 'Run unit tests'
                command: |
                    phpdbg -qrr \
                    vendor/bin/phpunit
            - store_test_results:
                path: '.phpunit/report'

            - run:
                name: 'Check test coverage threshold'
                command: |
                    coverage_threshold=${MINIMUM_TEST_COVERAGE_PERCENT-50}
                    bin/cicd/check-test-coverage ${coverage_threshold}

    static_analysis:
        <<: *defaults
        steps:
            - *attach_workspace
            - run:
                name: 'Run static analysis'
                command: |
                    vendor/bin/phpstan analyse \
                    -l 2 \
                    --memory-limit=1G \
                    src

    linting:
        <<: *defaults
        steps:
            - *attach_workspace

            - run:
                name: 'Run syntax check'
                command: 'vendor/bin/phplint --no-cache --ansi src'

            - run:
                name: 'Run code formatting check'
                command: 'vendor/bin/phpcs -n --colors src'

    security_tests:
        <<: *node_defaults
        steps:
            - *attach_workspace

            - run:
                name: 'Install Snyk CLI'
                command: 'yarn global add snyk'

            - run:
                name: 'Run snyk'
                command: |
                    if [ "${OPEN_SOURCE}" == "1" ] ; then
                       $(yarn global bin)/snyk test
                       $(yarn global bin)/snyk monitor
                    else
                        echo "Detected private repo. Skipping step."
                    fi

    build_phar:
        <<: *defaults
        steps:
            - *attach_workspace

            - run: 'composer self-update'
            - run:
                name: 'Generate phar'
                command: 'bin/bundle-phar'

            - run:
                name: 'Test phar'
                command: './hal.phar'
