#!/usr/bin/env bash

function loadTitles() {
    read -r -d '' TITLE_COMPOSER <<OUTOUT
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ COMPOSER INSTALLATION                                                        ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
OUTOUT
    read -r -d '' TITLE_COMPOSER_INSTALLED <<OUTOUT
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ COMPOSER INSTALLED DEPENDENCIES                                              ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
OUTOUT
}

# setup

loadTitles
DIR=$( cd "$( dirname "$0" )" && pwd )
DEPLOY=false

set -e

# run

COMPOSER="composer install --prefer-dist --no-progress"
COMPOSER_SHOW_INSTALLED="composer show --installed"

# determine whether to run frontend or backend only install
for var in "$@" ; do
    if [ "$var" = "--deploy" ] ; then
        DEPLOY=true
    fi
done

# If deploying, use production settings
if [ "$DEPLOY" = true ] ; then
    COMPOSER="composer install --prefer-dist --no-dev --no-interaction --ansi --optimize-autoloader --profile --no-progress --no-suggest"
fi


# download, update composer
if [ ! -f "$DIR/composer" ]; then
    echo "Downloading composer from http://composer..."
    curl http://composer/installer | bash -s "$DIR/composer"
    "$DIR/composer" -V
    echo
fi

echo "$TITLE_COMPOSER"
"$DIR/"$COMPOSER 2>&1
if [ "$DEPLOY" = true ] ; then
    echo ""
    echo "$TITLE_COMPOSER_INSTALLED"
    "$DIR/"$COMPOSER_SHOW_INSTALLED
fi
