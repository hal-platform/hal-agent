services:

    # logger: @monolog
    logger:
        class: 'Psr\Log\NullLogger'

    # monolog:
    #     class: 'Monolog\Logger'
    #     arguments: ['hal9000']
    #     calls:
    #         - ['pushHandler', [@monolog.console]]
    # monolog.console:
    #     class: 'Symfony\Bridge\Monolog\Handler\ConsoleHandler'

    ####################################################################################################################
    # Logging
    ####################################################################################################################

    logger.job:
        class: 'QL\Hal\Agent\Logger\JobLogger'
        arguments:
            - @doctrine.em
            - @logger.event
            - @clock

    logger.event:
        class: 'QL\Hal\Agent\Logger\EventLogger'
        arguments: [@doctrine.em]

    ####################################################################################################################
    # custom formatters and logging utils
    ####################################################################################################################

    logger.normalizer:
        class: 'QL\Hal\Agent\Logger\Normalizer'
        arguments: ['Y-m-d H:i:s']
    logger.resolver:
        class: 'QL\Hal\Agent\Logger\Resolver'

    logger.template.email.formatter:
        class: 'QL\Hal\Agent\Logger\TemplateFormatter'
        arguments: [@logger.normalizer, @logger.email.template]

    logger.email.template:
        class: 'Twig_Template'
        factory_service: 'logger.twig.environment'
        factory_method: 'loadTemplate'
        arguments: ['email.twig']

    logger.twig.environment:
        class: 'Twig_Environment'
        arguments: [@logger.twig.loader]
        calls:
            - ['addGlobal', ['hal_url', %hal.baseurl%]]
            - ['addGlobal', ['github_url', %github.baseurl.site%]]
    logger.twig.loader:
        class: 'Twig_Loader_Filesystem'
        arguments: [@logger.twig.loader.path]
    logger.twig.loader.path:
        class: 'WUT'
        factory_class: 'QL\Hal\Agent\Helper\StringSmusher'
        factory_method: 'smush'
        arguments: [@root, '/configuration/templates']

    ####################################################################################################################
    # actual loggers
    ####################################################################################################################

    logger.mcp:
        class: 'MCP\Service\Logger\Logger'
        arguments: [@logger.mcp.service, @logger.mcp.factory]

    logger.email:
        class: 'QL\Hal\Agent\Logger\EmailLogger'
        arguments: [@emailer, @emailer.message]

    ####################################################################################################################
    # email logger services
    ####################################################################################################################

    emailer:
        class: 'Swift_Mailer'
        arguments: [@emailer.transport]
    emailer.transport:
        class: 'Swift_SmtpTransport'
        arguments: [%email.server%]
    emailer.message:
        class: 'Swift_Message'
        calls:
            - ['setFrom', [%email.from%, %email.from.name%]]
            - ['setReplyTo', [%email.reply%]]
            - ['setCc', [%email.notify%]]
            - ['setContentType', ['text/html']]
            - ['setSubject', ['Critical Error']]
            # to, subject will be set at runtime

    ####################################################################################################################
    # mcp logger services
    ####################################################################################################################

    # subscriber to symfony/console event system to prepare mcp logger
    logger.mcp.subscriber:
        class: 'QL\Hal\Agent\Logger\McpLoggerSetupSubscriber'
        arguments: [@logger.mcp.factory]

    logger.mcp.service:
        class: 'MCP\Service\Logger\Service\GuzzleService'
        arguments: [@logger.mcp.guzzle, @logger.mcp.renderer, true]
    logger.mcp.guzzle:
        class: 'Guzzle\Http\Client'
        arguments: [%logger.mcp.host%]
    logger.mcp.renderer:
        class: 'MCP\Service\Logger\Renderer\XmlRenderer'
        arguments: [@logger.mcp.writer]
    logger.mcp.writer:
        class: 'XMLWriter'

    logger.mcp.factory:
        class: 'MCP\Service\Logger\Adapter\Psr\MessageFactory'
        arguments: [@clock]
        calls:
          - ['setDefaultProperty', ['applicationId', %application.id%]]
          # replaced at runtime, maybe
          - ['setDefaultProperty', ['machineIPAddress', @logger.mcp.serverIp]]
          # replaced at runtime
          - ['setDefaultProperty', ['machineName', 'localhost']]
    logger.mcp.serverIp:
        class: 'MCP\DataType\IPv4Address'
        factory_class: 'MCP\DataType\IPv4Address'
        factory_method: 'create'
        arguments: ['0.0.0.0']
