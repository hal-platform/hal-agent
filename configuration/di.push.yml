services:

    push.resolver:
        class: 'QL\Hal\Agent\Push\Resolver'
        arguments:
            - @logger.event
            - @push.repo
            - @clock
            - %push.sshUser%
            - %environment.path%
            - %environment.archive%
            - %github.baseurl.site%
        calls:
            - ['setBaseBuildDirectory', [%environment.temp%]]
            - ['setHomeDirectory', [%environment.home%]]
            - ['setAwsCredentials', [%aws.credentials.key%, %aws.credentials.secret%]]

    push.mover:
        class: 'QL\Hal\Agent\Push\Mover'
        arguments:
            - @logger.event
            - @utility.filesystem

    push.unpacker:
        class: 'QL\Hal\Agent\Push\Unpacker'
        arguments:
            - @logger.event
            - @utility.process.builder= # = signifies a prototype service
            - @utility.filesystem
            - @yaml.dumper
            - %timeout.filepacking%

    push.configuration.reader:
        class: 'QL\Hal\Agent\Push\ConfigurationReader'
        arguments:
            - @logger.event
            - @utility.filesystem
            - @yaml.parser

    push.builder:
        class: 'QL\Hal\Agent\Push\Builder'
        arguments:
            - @logger.event
            - @utility.process.builder= # = signifies a prototype service
            - %timeout.push.build%
    push.deployer:
        class: 'QL\Hal\Agent\Push\DelegatingDeployer'
        arguments:
            - @logger.event
            - @service_container
            -
                rsync: push.rsync.deployer
                elasticbeanstalk: push.elasticbeanstalk.deployer
                ec2: push.ec2.deployer

    # elastic beanstalk

    push.elasticbeanstalk.deployer:
        class: 'QL\Hal\Agent\Push\ElasticBeanstalk\Deployer'
        arguments:
            - @logger.event
            - @push.elasticbeanstalk.healthchecker
            - @push.builder
            - @push.elasticbeanstalk.packer
            - @push.elasticbeanstalk.uploader
            - @push.elasticbeanstalk.pusher

    push.elasticbeanstalk.healthchecker:
        class: 'QL\Hal\Agent\Push\ElasticBeanstalk\HealthChecker'
        arguments: [@aws.eb]

    push.elasticbeanstalk.packer:
        class: 'QL\Hal\Agent\Push\ElasticBeanstalk\Packer'
        arguments:
            - @logger.event
            - @utility.process.builder= # = signifies a prototype service
            - %timeout.push%

    push.elasticbeanstalk.uploader:
        class: 'QL\Hal\Agent\Push\ElasticBeanstalk\Uploader'
        arguments:
            - @logger.event
            - @aws.s3
            - %aws.s3.builds%

    push.elasticbeanstalk.pusher:
        class: 'QL\Hal\Agent\Push\ElasticBeanstalk\Pusher'
        arguments:
            - @logger.event
            - @aws.eb
            - %aws.s3.builds%

    # rsync

    push.rsync.deployer:
        class: 'QL\Hal\Agent\Push\Rsync\Deployer'
        arguments:
            - @logger.event
            - @push.rsync.delta
            - @push.builder
            - @push.rsync.serverCommand
            - @push.rsync.pusher

    push.rsync.delta:
        class: 'QL\Hal\Agent\Push\Rsync\CodeDelta'
        arguments:
            - @logger.event
            - @utility.process.builder= # = signifies a prototype service
            - @yaml.parser
            - @github.commits
            - %push.sshUser%

    push.rsync.pusher:
        class: 'QL\Hal\Agent\Push\Rsync\Pusher'
        arguments:
            - @logger.event
            - @utility.process.builder= # = signifies a prototype service
            - %timeout.push%

    push.rsync.serverCommand:
        class: 'QL\Hal\Agent\Push\Rsync\ServerCommand'
        arguments:
            - @logger.event
            - @utility.process.builder= # = signifies a prototype service
            - %push.sshUser%
            - %timeout.push.serverCommand%

    # ec2
    push.ec2.deployer:
        class: 'QL\Hal\Agent\Push\EC2\Deployer'
        arguments:
            - @logger.event
            - @push.ec2.instance.finder
            - @push.builder
            - @push.ec2.pusher

    push.ec2.instance.finder:
        class: 'QL\Hal\Agent\Push\EC2\InstanceFinder'
        arguments: [@aws.ec2]

    push.ec2.pusher:
        class: 'QL\Hal\Agent\Push\EC2\Pusher'
        arguments:
            - @logger.event
            - @utility.process.builder= # = signifies a prototype service
            - %aws.ec2.user%
            - %timeout.push.ec2%

    # private services used only by push actions

    yaml.dumper:
        class: 'Symfony\Component\Yaml\Dumper'
        calls:
            - ['setIndentation', ['4']]
