services:

    root:
        synthetic: true

    application:
        class: 'Symfony\Component\Console\Application'
        arguments: [%application.name%, %application.version%]
        calls:
            - ['add', [@lazy.command.build.create]]
            - ['add', [@lazy.command.build.build]]
            - ['add', [@lazy.command.build.remove]]
            - ['add', [@lazy.command.push.create]]
            - ['add', [@lazy.command.push.push]]
            - ['add', [@lazy.command.builds.list]]
            - ['add', [@lazy.command.worker.build]]
            - ['add', [@lazy.command.worker.push]]
            - ['setDispatcher', [@dispatcher]]
    dispatcher:
        class: 'Symfony\Component\EventDispatcher\EventDispatcher'
        calls:
            - ['addSubscriber', [@logger.mcp.subscriber]]
            - ['addSubscriber', [@utility.exceptionHandler]]

    clock:
        class: 'MCP\DataType\Time\Clock'
        arguments: ['now', 'UTC']

    ####################################################################################################################
    # doctrine
    ####################################################################################################################

    doctrine.config:
        class: 'Doctrine\ORM\Configuration'
        factory_class: 'Doctrine\ORM\Tools\Setup'
        factory_method: 'createAnnotationMetadataConfiguration'
        arguments:
            - ['@doctrine.mapping']
            - %doctrine.devmode%
            - @doctrine.proxyDir
            - @doctrine.cache
    doctrine.proxyDir:
        class: 'DOES_NOT_MATTER'
        factory_class: 'QL\Hal\Agent\Helper\StringSmusher'
        factory_method: 'smush'
        arguments: [@root, '/.doctrine']

    doctrine.cache:
        class: 'Doctrine\Common\Cache\ArrayCache'

    doctrine.events:
        class: 'Doctrine\Common\EventManager'
        calls:
            - ['addEventListener', [['prePersist'], @doctrine.persist.listener]]

    doctrine.random:
        class: 'QL\Hal\Core\RandomGenerator'

    doctrine.persist.listener:
        class: 'QL\Hal\Core\Entity\Listener\EntityPersistListener'
        arguments: [@clock, @doctrine.random]

    ####################################################################################################################
    # utility
    ####################################################################################################################

    utility.helper.downloadProgress:
        class: 'QL\Hal\Agent\Helper\DownloadProgressHelper'
        arguments: [@github.guzzleHttpClient]
    utility.yamlDumper:
        class: 'Symfony\Component\Yaml\Dumper'
        calls:
            - ['setIndentation', ['4']]
    utility.filesystem:
        class: 'Symfony\Component\Filesystem\Filesystem'
    utility.process.builder:
        class: 'Symfony\Component\Process\ProcessBuilder'
        scope: prototype
        calls:
            - ['inheritEnvironmentVariables', [false]]
    utility.referenceResolver:
        class: 'QL\Hal\Agent\Github\ReferenceResolver'
        arguments:
            - @github.references
            - @github.commits
            - @github.pullRequests
    utility.forker:
        class: 'QL\Hal\Agent\Helper\ForkHelper'
    utility.exceptionHandler:
        class: 'QL\Hal\Agent\Helper\ExceptionHandlerSubscriber'
        arguments: [@logger.mcp]

    utility.id.generator:
        class: 'QL\Hal\Core\JobIdGenerator'
        arguments:
            - %application.major.version%
            - %unique.alphabet%
            - %unique.size%

    ####################################################################################################################
    # github
    ####################################################################################################################

    github.archive:
        class: 'QL\Hal\Agent\Github\ArchiveApi'
        arguments: [@github.client, @utility.filesystem]
    github.references:
        class: 'Github\Api\GitData\References'
        arguments: [@github.client]
    github.commits:
        class: 'Github\Api\GitData\Commits'
        arguments: [@github.client]
    github.pullRequests:
        class: 'Github\Api\PullRequest'
        arguments: [@github.client]

    github.client:
        class: 'Github\Client'
        arguments: [@github.httpClient]
    github.httpClient:
        class: 'Github\HttpClient\HttpClient'
        arguments: [[], @github.guzzleHttpClient]
        calls:
            - ['authenticate', [%github.token%, null, 'http_token']]
    github.guzzleHttpClient:
        class: 'Guzzle\Http\Client'
        arguments:
            - %github.baseurl%
            -
                curl.options:
                    progress: true
