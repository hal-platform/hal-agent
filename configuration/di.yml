services:

    application:
        class: 'Symfony\Component\Console\Application'
        arguments:
            - '%application.name%'
            - '%application.version%'
        calls:
            - ['add', ['@command.build']]
            - ['add', ['@command.deploy']]
            - ['add', ['@command.create']]

    clock:
        class: 'MCP\DataType\Time\Clock'
        arguments: ['now', 'UTC']

    command.create:
        class: 'QL\Hal\Agent\Command\CreateCommand'
        arguments:
            - 'build:create'
            - '@doctrine.em'
            - '@clock'
            - '@repo.repository'
            - '@repo.environment'
    command.build:
        class: 'QL\Hal\Agent\Command\BuildCommand'
        arguments:
            - 'build:build'
            - '%debug%'
            - '@build.logger'
            - '@doctrine.em'
            - '@clock'
            - '@build.resolver'
            - '@build.downloader'
            - '@build.unpacker'
            - '@build.builder'
            - '@build.packer'
            - '@utility.helper.download-progress'
            - '@process.builder=' # = signifies a prototype service
    command.deploy:
        class: 'QL\Hal\Agent\Command\DeployCommand'
        arguments:
            - 'build:deploy'

    utility.helper.download-progress:
        class: 'QL\Hal\Agent\Helper\DownloadProgressHelper'
        arguments:
            - '@github.guzzleHttpClient'

    build.resolver:
        class: 'QL\Hal\Agent\Build\Resolver'
        arguments:
            - '@build.logger'
            - '@repo.build'
            - '%environment.path%'
    build.downloader:
        class: 'QL\Hal\Agent\Build\Downloader'
        arguments:
            - '@build.logger'
            - '@github.archive'
    build.unpacker:
        class: 'QL\Hal\Agent\Build\Unpacker'
        arguments:
            - '@build.logger'
    build.builder:
        class: 'QL\Hal\Agent\Build\Builder'
        arguments:
            - '@build.logger'
    build.packer:
        class: 'QL\Hal\Agent\Build\Packer'
        arguments:
            - '@build.logger'
    build.logger:
        class: 'QL\Hal\Agent\Build\Logger'

    process.builder:
        class: 'Symfony\Component\Process\ProcessBuilder'
        scope: prototype
        factory_class: 'Symfony\Component\Process\ProcessBuilder'
        factory_method: 'create'

### imported from hal-core

    # Repositories
    repo.build:
        class: 'QL\Hal\Core\Entity\Repository\BuildRepository'
        factory_service:  doctrine.em
        factory_method:   getRepository
        arguments:
            - 'QL\Hal\Core\Entity\Build'
    repo.environment:
        class: 'QL\Hal\Core\Entity\Repository\EnvironmentRepository'
        factory_service:  doctrine.em
        factory_method:   getRepository
        arguments:
            - 'QL\Hal\Core\Entity\Environment'
    repo.repository:
        class: 'QL\Hal\Core\Entity\Repository\RepositoryRepository'
        factory_service:  doctrine.em
        factory_method:   getRepository
        arguments:
            - 'QL\Hal\Core\Entity\Repository'

    # Doctrine Configuration
    doctrine.config:
        class:            'Doctrine\ORM\Configuration'
        factory_class:    'Doctrine\ORM\Tools\Setup'
        factory_method:   createAnnotationMetadataConfiguration
        arguments:
            - %doctrine.mappings%
            - %doctrine.devmode%

    # Doctrine Entity Manager Configurator
    doctrine.em.config:
        class: 'QL\Hal\Core\Entity\Configurator\EntityManagerConfigurator'

    # Doctrine Entity Manager
    doctrine.em:
        class:            'Doctrine\ORM\EntityManager'
        factory_class:    'Doctrine\ORM\EntityManager'
        factory_method:   create
        arguments:
            - %doctrine.connection%
            - @doctrine.config
        configurator: ['@doctrine.em.config', 'configure']

### imported from hal

    github.archive:
        class: 'QL\Hal\Agent\Github\ArchiveApi'
        arguments: ['@github.client']
    github.client:
        class: 'Github\Client'
        arguments: ['@github.httpClient']
    github.httpClient:
        class: 'Github\HttpClient\HttpClient'
        arguments: [[], '@github.guzzleHttpClient']
        calls:
            - ['authenticate', ['%github.token%', null, 'http_token']]
    github.guzzleHttpClient:
        class: 'Guzzle\Http\Client'
        arguments:
            - 'http://git/api/v3/'
            -
                curl.options:
                    progress: true
