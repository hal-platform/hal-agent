services:

    root:
        synthetic: true

    application:
        class: 'Symfony\Component\Console\Application'
        arguments: [%application.name%, %application.version%]
        calls:
            - ['add', [@lazy.command.build.create]]
            - ['add', [@lazy.command.build.build]]
            - ['add', [@lazy.command.build.remove]]
            - ['add', [@lazy.command.push.create]]
            - ['add', [@lazy.command.push.push]]
            - ['add', [@lazy.command.builds.list]]
            - ['add', [@lazy.command.worker.build]]
            - ['add', [@lazy.command.worker.push]]
            - ['setDispatcher', [@dispatcher]]
    dispatcher:
        class: 'Symfony\Component\EventDispatcher\EventDispatcher'
        calls:
            - ['addSubscriber', [@logger.mcp.subscriber]]
            - ['addSubscriber', [@utility.exceptionHandler]]

    clock:
        class: 'MCP\DataType\Time\Clock'
        arguments: ['now', 'UTC']

    ssh.manager:
        class: 'QL\Hal\Agent\SSHSessionManager'
        arguments:
            - @logger.event
            - @utility.filesystem
            - %ssh.credentials%

    ####################################################################################################################
    # doctrine
    ####################################################################################################################

    doctrine.proxy.dir:
        class: 'DOES_NOT_MATTER'
        factory: ['QL\Hal\Agent\Utility\Stringify', 'smush']
        arguments: [@root, '/.doctrine']

    doctrine.cache:
        class: 'Doctrine\Common\Cache\ArrayCache'

    doctrine.em.events:
        class: 'Doctrine\Common\EventManager'
        calls:
            - ['addEventListener', [['prePersist'], @doctrine.persist.listener]]

    doctrine.random:
        class: 'QL\Hal\Core\RandomGenerator'

    doctrine.persist.listener:
        class: 'QL\Hal\Core\DoctrinePersistListener'
        arguments: [@clock, @doctrine.random]

    ####################################################################################################################
    # utility / shared
    ####################################################################################################################

    utility.helper.downloadProgress:
        class: 'QL\Hal\Agent\Symfony\GuzzleDownloadProgress'
        arguments: [@github.guzzleHttpClient]

    utility.filesystem:
        class: 'Symfony\Component\Filesystem\Filesystem'
    utility.process.builder:
        class: 'Symfony\Component\Process\ProcessBuilder'
        scope: prototype
        calls:
            - ['inheritEnvironmentVariables', [false]]
    utility.referenceResolver:
        class: 'QL\Hal\Agent\Github\ReferenceResolver'
        arguments:
            - @github.references
            - @github.commits
            - @github.pullRequests
    utility.forker:
        class: 'QL\Hal\Agent\Helper\ForkHelper'
    utility.exceptionHandler:
        class: 'QL\Hal\Agent\Symfony\ExceptionHandlerSubscriber'
        arguments: [@logger.mcp]

    utility.id.generator:
        class: 'QL\Hal\Core\JobIdGenerator'
        arguments:
            - %application.major.version%
            - %unique.alphabet%
            - %unique.size%

    yaml.parser:
        class: 'Symfony\Component\Yaml\Parser'

    utility.environment.resolver:
        class: 'QL\Hal\Agent\Utility\BuildEnvironmentResolver'
        arguments:
            - @utility.process.builder= # = signifies a prototype service
        calls:
            - ['setWindowsBuilder', [%build.windows.remoteUser%, %build.windows.server%, %build.windows.temp%]]
            - ['setUnixBuilder', [%build.unix.remoteUser%, %build.unix.server%, %build.unix.temp%]]

    utility.github.deploymenter:
        class: 'QL\Hal\Agent\Utility\GithubDeploymenter'
        arguments:
            - @github.deployments
            - %hal.baseurl%

    guzzle:
        class: 'GuzzleHttp\Client'

    ####################################################################################################################
    # encryption
    ####################################################################################################################

    encrypter.factory:
        class: 'QL\Hal\Core\Crypto\CryptoFactory'
        arguments:
            - @encrypter.encryptedkey.squished
            - %encrypter.symmetricKeyPath%

    decrypter:
        class: 'QL\Hal\Core\Crypto\Decrypter'
        factory: [@encrypter.factory, 'getAsymmetricDecrypter']

    encrypter.encryptedkey.squished:
        class: 'DERP'
        factory: ['QL\Hal\Agent\Utility\Stringify', 'squish']
        arguments: [%encrypter.encryptedkey%]

    encrypted.resolver:
        class: 'QL\Hal\Agent\Utility\EncryptedPropertyResolver'
        arguments:
            - @encrypted.repo
            - @logger.event
            - @service_container

    ####################################################################################################################
    # github
    ####################################################################################################################

    github.archive:
        class: 'QL\Hal\Agent\Github\ArchiveApi'
        arguments: [@github.client]

    github.references:
        class: 'Github\Api\GitData\References'
        arguments: [@github.client]
    github.commits:
        class: 'Github\Api\Repository\Commits'
        arguments: [@github.client]
    github.pullRequests:
        class: 'Github\Api\PullRequest'
        arguments: [@github.client]

    github.deployments:
        class: 'QL\Hal\Agent\Github\DeploymentsApi'
        arguments:
            - @guzzle
            - %github.baseurl.api%

    github.client:
        class: 'Github\Client'
        arguments: [@github.httpClient]
    github.httpClient:
        class: 'Github\HttpClient\HttpClient'
        arguments: [[], @github.guzzleHttpClient]
        calls:
            - ['authenticate', [%github.token%, null, 'http_token']]
    github.guzzleHttpClient:
        class: 'Guzzle\Http\Client'
        arguments:
            - %github.baseurl.api%
            -
                curl.options:
                    progress: true

    ####################################################################################################################
    # aws
    ####################################################################################################################

    aws.credentials.cache:
        class: 'Guzzle\Cache\DoctrineCacheAdapter'
        arguments: [@aws.credentials.cache.source]
    aws.credentials.cache.source:
        # class: 'Doctrine\Common\Cache\FilesystemCache'
        # arguments: ['/tmp/cache']
        class: 'Doctrine\Common\Cache\ArrayCache'

    aws.eb:
        class: 'Aws\ElasticBeanstalk\ElasticBeanstalkClient'
        factory: ['Aws\ElasticBeanstalk\ElasticBeanstalkClient', 'factory']
        arguments:
            -
                credentials.cache: @aws.credentials.cache
                region: %aws.region%
                key: %aws.credentials.key%
                secret: %aws.credentials.secret%

    aws.s3:
        class: 'Aws\S3\S3Client'
        factory: ['Aws\S3\S3Client', 'factory']
        arguments:
            -
                credentials.cache: @aws.credentials.cache
                region: %aws.region%
                key: %aws.credentials.key%
                secret: %aws.credentials.secret%

    aws.ec2:
        class: 'Aws\Ec2\Ec2Client'
        factory: ['Aws\Ec2\Ec2Client', 'factory']
        arguments:
            -
                credentials.cache: @aws.credentials.cache
                region: %aws.region%
                key: %aws.credentials.key%
                secret: %aws.credentials.secret%
