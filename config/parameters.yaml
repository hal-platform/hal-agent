parameters:
    ############################################################################
    # application
    ############################################################################
    application.id: 'halcli'
    application.title: 'Hal Agent'
    application.environment: '%env(string:ENVIRONMENT)%'

    application.version: '%env(string:HAL_VERSION)%'
    application.sha: '%env(string:HAL_APPLICATION_SHA)%'

    application.commands:
        management:build:remove: 'executor.build.remove'
        job:build: 'executor.build.start'
        job:release: 'executor.deploy.start'
        runner:build: 'executor.runner.build'
        runner:deploy: 'executor.runner.deploy'

    ############################################################################
    # general
    ############################################################################
    root: '%env(string:HAL_ROOT)%'
    hal.baseurl: '%env(string:HAL_BASEURL)%'
    hal.api_token: '%env(string:HAL_API_TOKEN)%'

    date.timezone: 'America/Detroit'

    ############################################################################
    # paths
    ############################################################################
    path.archive: '%env(string:HAL_PATH_ARTIFACT_ARCHIVE)%'        # permanent filesystem artifact repository
    path.temp: '%env(string:HAL_PATH_BUILD_TEMP)%'                 # temporary scratch, local
    path.linux_builder: '%env(string:HAL_PATH_LINUX_BUILDER)%'     # temporary scratch, linux builder

    ############################################################################
    # builders
    ############################################################################
    build.linux.user: '%env(string:HAL_LINUX_BUILDER_USER)%'
    build.linux.server: '%env(string:HAL_LINUX_BUILDER_SERVER)%'
    build.linux.keypath: '%env(string:HAL_LINUX_SSH_KEYPATH)%'

    deploy.rsync.user: '%env(string:HAL_RSYNC_DEPLOY_USER)%'
    deploy.rsync.keypath: '%env(string:HAL_RSYNC_SSH_KEYPATH)%'

    ############################################################################
    # logging
    ############################################################################
    error_handling.log_stacktrace: "%env(bool:HAL_LOG_STACKTRACES_ON)%"
    error_handling.docker.debug: "%env(bool:HAL_LOG_DOCKER_DEBUG_ON)%"

    ############################################################################
    # timeouts
    ############################################################################
    timeout.build: 1800
    timeout.push: 300

    timeout.deploy.server_command: 120

    timeout.standard: 20
    timeout.filepacking: 120

    deploy.cd.waiter.interval: 10
    deploy.cd.waiter.max: 60

    deploy.eb.waiter.interval: 10
    deploy.eb.waiter.max: 60
    deploy.eb.waiter.additional_wait_seconds: 50

    build.ssm.waiter.interval: 10
    build.ssm.waiter.max: 180

    timeout.linux_builder_internal: 120
    timeout.windows_builder_internal: 120

    ############################################################################
    # cache
    ############################################################################
    redis.server: '%env(string:HAL_REDIS_SERVER)%'
    redis.prefix: '%env(string:HAL_REDIS_PREFIX)%'

    cache.type.main: '%env(string:HAL_CACHE_MAIN)%'
    cache.type.github: '%env(string:HAL_CACHE_GITHUB)%'

    cache.github.default_ttl: 60

    ############################################################################
    # windows platform
    ############################################################################
    build.windows_aws.build_path: '%env(string:HAL_WIN_AWS_BUILD_PATH)%'
    build.windows_aws.build_script_path: '%env(string:HAL_WIN_AWS_BUILD_SCRIPT_PATH)%'
    build.windows_aws.build_tools_path: '%env(string:HAL_WIN_AWS_BUILD_TOOLS_PATH)%'

    build.windows_aws.region: '%env(string:HAL_WIN_AWS_REGION)%'
    build.windows_aws.credential_name: '%env(string:HAL_WIN_AWS_CREDENTIAL)%'
    build.windows_aws.bucket: '%env(string:HAL_WIN_AWS_BUCKET)%'
    build.windows_aws.builder_filter: '%env(string:HAL_WIN_AWS_BUILDER_FILTER)%'

    ############################################################################
    # windows docker
    ############################################################################
    build.platforms.option.windows.docker_private_registry: '%env(string:HAL_WIN_DOCKER_PRIVATE_REG)%'
    build.platforms.option.windows.docker_easy_repo: '%env(string:HAL_DOCKER_EASY_REPO)%'
    build.platforms.option.windows.docker_default_image: '%build.platforms.option.windows.docker_private_registry%/hal-build-environments:vs2015'

    # "latest" also allows no tag
    build.platforms.option.windows.allowed_images:
        'microsoft/nanoserver':
            - 'latest'
            - '10.0.14393.1480'
            - '10.0.14393.1593'
        'microsoft/windowsservercore':
            - '10.0.14393.1480'
        '%build.platforms.option.windows.docker_private_registry%/hal-build-environments':
            - '*'

    # We can use json: instead of string: after Symfony bug #27239 is fixed
    # https://github.com/symfony/symfony/issues/27239
    build.platforms.option.manual_dns: '%env(string:HAL_DNS_INJECT_OPTIONS)%'

    ############################################################################
    # linux platform
    ############################################################################
    build.platforms.option.linux.docker_private_registry: '%env(string:HAL_LINUX_DOCKER_PRIVATE_REG)%'
    build.platforms.option.linux.docker_easy_repo: '%env(string:HAL_DOCKER_EASY_REPO)%'
    build.platforms.option.linux.docker_default_image: 'halplatform/hal-build-environments:debian8-buildpack'

    # "latest" also allows no tag
    build.platforms.option.linux.allowed_images:
        'halplatform/hal-build-environments':
            - '*'
        '%build.platforms.option.linux.docker_private_registry%/hal-build-environments':
            - '*'
        'hal9000/base_centos7':
            - 'latest'

    ############################################################################
    # credentials / encryption
    ############################################################################
    ssh.credentials:
        - ['%build.linux.user%',  '*', 'key:%build.linux.keypath%']
        - ['%deploy.rsync.user%', '*', 'key:%deploy.rsync.keypath%']

    aws.use_host_credentials: "%env(bool:HAL_AWS_CREDENTIALS_USE_HOST)%"
    aws.host_credentials_path: '%env(string:HAL_AWS_HOST_CREDENTIALS_PATH)%'

    encryption.secret_path: '%env(string:HAL_CRYPTO_SECRETPATH)%'

    ############################################################################
    # platform modules
    ############################################################################

    build.platforms:
        linux: 'build_platform.linux'
        windows: 'build_platform.windows_aws_docker'

    deployment.platforms:
        elb: 'deploy_platform.elb'
        rsync: 'deploy_platform.rsync'
        eb: 'deploy_platform.eb'
        s3: 'deploy_platform.s3'
        cd: 'deploy_platform.cd'
        script: 'deploy_platform.script'
