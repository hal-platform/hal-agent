services:

    application:
        class: 'Symfony\Component\Console\Application'
        arguments: ['%application.title%', '%application.version%']
        calls:
            - ['add', ['@command.management.build.remove']]
            - ['add', ['@command.job.start_build']]
            - ['add', ['@command.job.start_deploy']]
            - ['add', ['@command.runner.build']]
            - ['add', ['@command.runner.deploy']]
            # - ['add', ['@command.worker.build']]
            # - ['add', ['@command.worker.deploy']]
            - ['setDispatcher', ['@dispatcher']]
    dispatcher:
        class: 'Symfony\Component\EventDispatcher\EventDispatcher'
        calls:
            - ['addSubscriber', ['@logger.mcp.subscriber']]
            - ['addSubscriber', ['@logger.exception_handler']]

    clock:
        class: 'QL\MCP\Common\Time\Clock'
        arguments: ['now', 'UTC']

    ssh.manager:
        class: 'Hal\Agent\Remoting\SSHSessionManager'
        arguments: ['@logger.event', '@ssh.wallet']

    ssh.filemanager:
        class: 'Hal\Agent\Remoting\FileSyncManager'
        arguments: ['@ssh.wallet']

    ssh.wallet:
        class: 'Hal\Agent\Remoting\CredentialWallet'
        calls:
            - ['importCredentials', ['%ssh.credentials%']]

    ####################################################################################################################
    # CACHING
    ####################################################################################################################

    # cache.github:
    #     class: 'QL\MCP\Cache\CacheInterface'
    #     factory: ['@service_container', 'get']
    #     arguments: ['cache.%cache.type.github%']
    #
    # cache.memory:
    #     class: 'QL\MCP\Cache\MemoryCache'

    # cache.redis:
    #     class: 'QL\MCP\Cache\PredisCache'
    #     arguments: ['@redis']
    #
    # cache.redis_github:
    #     class: 'QL\MCP\Cache\PredisCache'
    #     parent: 'cache.redis'
    #     calls:
    #         - ['setMaximumTtl', ['%cache.github.default.ttl%']]

    redis:
        class: 'Predis\Client'
        arguments:
            - '%redis.server%'
            - { prefix: '%redis.prefix%:' }

    ####################################################################################################################
    # ERROR & EXCEPTION HANDLING
    ####################################################################################################################

    logger:
        parent: 'mcp.logger'

    logger.exception_handler:
        class: 'Hal\Agent\Symfony\ExceptionHandlerSubscriber'
        arguments: ['@logger']
        calls:
            - ['setStacktraceLogging', ['%error_handling.log_stacktrace%']]

    logger.event:
        class: 'Hal\Agent\Logger\EventLogger'
        arguments:
            - '@doctrine.em'
            - '@logger.process_handler'
            - '@logger.metadata_handler'
            - '@clock'

    logger.process_handler:
        class: 'Hal\Agent\Logger\ProcessHandler'
        arguments: ['@doctrine.em']

    logger.metadata_handler:
        class: 'Hal\Agent\Logger\MetadataHandler'
        arguments: ['@logger.metadata_handler.http_client', '@logger']

    logger.metadata_handler.http_client:
        class: 'GuzzleHttp\Client'
        arguments:
            -
                base_url: '%hal.baseurl%'
                defaults:
                    verify: true
                    exceptions: false
                    headers:
                        'Authorization': 'token %hal.api_token%'


    # subscriber to symfony/console event system to prepare mcp logger
    logger.mcp.subscriber:
        class: 'Hal\Agent\Logger\MCPLoggerSubscriber'
        arguments: ['@mcp.logger.factory']

    ####################################################################################################################
    # DOCTRINE-SPECIFIC SERVICES
    ####################################################################################################################

    doctrine.cache.redis:
        class: 'Hal\Core\Database\DoctrineUtility\DoctrinePredisCache'
        arguments: ['@redis', '%doctrine.cache.ttl%']

    ####################################################################################################################
    # utility / shared
    ####################################################################################################################

    utility.finder:
        class: 'Symfony\Component\Finder\Finder'
    utility.filesystem:
        class: 'Symfony\Component\Filesystem\Filesystem'

    utility.forker:
        class: 'Hal\Agent\Helper\ForkHelper'

    yaml.parser:
        class: 'Symfony\Component\Yaml\Parser'

    utility.environment.resolver:
        class: 'Hal\Agent\Utility\BuildEnvironmentResolver'
        arguments: ['@doctrine.em', '@process_runner']
        calls:
            - ['setWindowsAWSBuilder', ['%build.windows_aws.region%', '%build.windows_aws.credential_name%', '%build.windows_aws.bucket%', '%build.windows_aws.builder_filter%']]
            - ['setUnixBuilder',       ['%build.linux.user%',         '%build.linux.server%',                '%path.linux_builder%']]

    process_runner:
        class: 'Hal\Agent\Symfony\ProcessRunner'
        arguments: ['@logger.event']
    filesystem:
        class: 'Symfony\Component\Filesystem\Filesystem'

    aws:
        class: 'Aws\Sdk'
        arguments:
            - { version: 'latest' }

    aws.host_sdk_credential_provider:
        class: 'Aws\Credentials\CredentialProvider'
        factory: ['Aws\Credentials\CredentialProvider', 'ini']
        arguments:
            - null
            - '%aws.host_credentials_path%'

    ####################################################################################################################
    # job configuration
    ####################################################################################################################

    job_configuration.reader:
        class: 'Hal\Agent\JobConfiguration\ConfigurationReader'
        arguments:
            - '@logger.event'
            - '@utility.filesystem'
            - '@yaml.parser'

    job_configuration.step_parser:
        class: 'Hal\Agent\JobConfiguration\StepParser'

    ####################################################################################################################
    # encryption
    ####################################################################################################################

    encryption:
        class: 'Hal\Core\Crypto\Encryption'
        factory: ['@encryption.factory', 'getCrypto']
        lazy: true

    encryption.factory:
        class: 'Hal\Core\Crypto\CryptoFilesystemFactory'
        arguments: ['%encryption.secret_path%']

    encrypted.resolver:
        class: 'Hal\Agent\Utility\EncryptedPropertyResolver'
        arguments:
            - '@doctrine.em'
            - '@encryption'
            - '@logger.event'
